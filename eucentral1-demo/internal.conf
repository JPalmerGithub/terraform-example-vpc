#cloud-config
apt_sources:
 - source: "deb https://get.docker.io/ubuntu docker main"
   keyid: 36A1D7869245C8950F966E92D8576A8BA88D21E9
 - source: "deb http://apt.puppetlabs.com trusty main"
   keyid: 1054b7a24bd6ec30
apt_upgrade: true
locale: en_US.UTF-8
packages:
 - lxc-docker
 - puppet
 - git
 - traceroute
 - nmap
 - vim 
 - puppetmaster-passenger
write_files:
-   path: /etc/puppet/autosign.conf
    permissions: '0644'
    content: "*\n"
-   path: /etc/puppet/puppet.conf
    permissions: '0400'
    content: |
        [main]
        logdir=/var/log/puppet
        vardir=/var/lib/puppet
        ssldir=/var/lib/puppet/ssl
        rundir=/var/run/puppet
        factpath=$vardir/lib/facter
        templatedir=$confdir/templates

        [master]
        node_terminus = exec
        external_nodes = /usr/local/bin/ec2_enc.rb
        # These are needed when the puppetmaster is run by passenger
        # and can safely be removed if webrick is used.
        ssl_client_header = SSL_CLIENT_S_DN
        ssl_client_verify_header = SSL_CLIENT_VERIFY 
-   path: /usr/local/bin/ec2_enc.rb
    permissions: '0755'
    content: |
        #!/usr/bin/ruby
        require 'rubygems'
        require 'logger'
        require 'aws-sdk'

        def find_instance(host_name)

          if (not host_name)
            puts 'Usage: ec2_enc.rb <host_name>'
            puts 'The parameter host_name must not be empty'
            exit 1
          end

          Aws.config.update({region: 'eu-central-1', credentials: Aws::InstanceProfileCredentials.new})
          ec2 = Aws::EC2::Client.new

          environment = 'prodction'
          role = 'unknown'
          params = {}
          instance = begin
            ec2.describe_instances( filters: [{name: 'private-dns-name', values: [host_name]}]).data['reservations'][0]['instances'][0]
          rescue
          end
          tags = {}
	  instance['tags'].each { |tag| tags[tag[
          ec2.describe_instances( filters: [{name: 'private-dns-name', values: [host_name]}]).each do |page|
            page.each do |instance|
              enc = Hash.new
              instance.tags.each do |key, value|
                if key == 'puppet_role'
                  role = value
                end
                if key == 'puppet_role_params'
                  params = params.merge(params, JSON.parse(value))
                end
                if key == 'puppet_environment'
                  environment = value
                end
              end 

              return {
                'classes' => { "role::#{role}" => params },
                'environment' => environmane
              }.to_yaml
            end
          end

          puts "Unknown host with name #{host_name}."
          exit 1
        end
        puts find_instance(ARGV[0])

runcmd:
 - [ /usr/bin/gem, install, aws-sdk ]
 - [ /usr/bin/docker, run, --rm, -v, "/usr/local/bin:/target", jpetazzo/nsenter ]
